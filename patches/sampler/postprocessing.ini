[general]
delay=0.05
debug=2

[redis]
hostname=localhost
port=6379

[initial]
; here you can specify the initial values of some control values

[input]
; the keys here can have an arbitrary name, but should map those in the output section
; the keys must be lower-case. values should not contain an equation, only one-to-one mappings
delta_min_1=spectral.channel1.delta.min_att
delta_max_1=spectral.channel1.delta.max_att
delta_1=spectral.channel1.delta

theta_min_1=spectral.channel1.theta.min_att
theta_max_1=spectral.channel1.theta.max_att
theta_1=spectral.channel1.theta

alpha_min_1=spectral.channel1.alpha.min_att
alpha_max_1=spectral.channel1.alpha.max_att
alpha_1=spectral.channel1.alpha

beta_min_1=spectral.channel1.beta.min_att
beta_max_1=spectral.channel1.beta.max_att
beta_1=spectral.channel1.beta

delta_min_2=spectral.channel2.delta.min_att
delta_max_2=spectral.channel2.delta.max_att
delta_2=spectral.channel2.delta

theta_min_2=spectral.channel2.theta.min_att
theta_max_2=spectral.channel2.theta.max_att
theta_2=spectral.channel2.theta

alpha_min_2=spectral.channel2.alpha.min_att
alpha_max_2=spectral.channel2.alpha.max_att
alpha_2=spectral.channel2.alpha

beta_min_2=spectral.channel2.beta.min_att
beta_max_2=spectral.channel2.beta.max_att
beta_2=spectral.channel2.beta

[output]
; besides +, -, /, *, the equations also support log, log2, log10, exp, power from numpy
; and compress, limit, rescale, normalizerange, normalizestandard from EEGsynth

post.channel1.delta = (delta_1 - delta_min_1 * 0.5) / ( max(delta_max_1,delta_1*1.1) - delta_min_1 * 0.5)
post.channel1.theta = (theta_1 - theta_min_1 * 0.5) / ( max(theta_max_1,theta_1*1.1) - theta_min_1 * 0.5)
post.channel1.alpha = (alpha_1 - alpha_min_1 * 0.5) / ( max(alpha_max_1,alpha_1*1.1) - alpha_min_1 * 0.5)
post.channel1.beta  = (beta_1  - beta_min_1 * 0.5)  / ( max(beta_max_1, beta_1*1.1)  - beta_min_1 * 0.5)
post.channel2.delta = (delta_2 - delta_min_2 * 0.5) / ( max(delta_max_2,delta_2*1.1) - delta_min_2 * 0.5)
post.channel2.theta = (theta_2 - theta_min_2 * 0.5) / ( max(theta_max_2,theta_2*1.1) - theta_min_2 * 0.5)
post.channel2.alpha = (alpha_2 - alpha_min_2 * 0.5) / ( max(alpha_max_2,alpha_2*1.1) - alpha_min_2 * 0.5)
post.channel2.beta  = (beta_2  - beta_min_2 * 0.5)  / ( max(beta_max_2, beta_2*1.1)  - beta_min_2 * 0.5)
